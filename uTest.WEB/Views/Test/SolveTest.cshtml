@using uTest.WEB.Helpers
@using uTest.WEB.ViewModels
@model uTest.WEB.ViewModels.TestViewModel

@{
    ViewBag.Title = "Solving";
}

<div class="row"></div>
<div class="row">
    <div class="col l3 hide-on-med-and-down pushpin">
        <div class="moving-block">
            <div class="row">
                <div id="right-sidebar" class="card centralized z-depth-0">
                    <p class="card-title flow-text white-text menu-par">Menu</p>
                    <div class="collection with-header no-margin-top">
                        @Html.RouteLink("Home", new { controller = "Home", action = "Index" }, new { @class = "collection-item main-color-text" })
                        @Html.RouteLink("My tasks", new { controller = "Task", action = "Index" }, new { @class = "collection-item main-color-text" })
                        @Html.RouteLink("Public tests", new { controller = "Test", action = "Public" }, new { @class = "collection-item main-color-text" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col l9 m12 s12 push-l3">
        <div class="row">
            <div class="col l11 m12 s12">
                <div class="row">
                    <p class="flow-text welcome-text centralized">@Model.Name</p>
                    <hr class="colored-hr-thin"/>
                </div>
                <div class="row">
                    <div class="col l10 m10 s12 push-l1 push-m1">
                        @using (Html.BeginForm("SolveTest", "Test", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("testId", Model.Id)
                            ViewBag.QuestionNum = 1;
                            foreach (var question in Model.Questions)
                            {
                                 <div class="row">
                                     <p class="flow-text welcome-text centralized">Question #@ViewBag.QuestionNum</p>
                                 </div>
                                 <div class="row">
                                     <p class="flow-text sub-welcome-text">@question.Text</p>
                                 </div>
                                 <div class="row">
                                     @{
                                         var textValues = new Dictionary<string, string>();
                                         foreach (var answer in question.Answers)
                                         {
                                             textValues.Add(answer.Text, answer.Id.ToString());
                                         }
                                         string id = "question-" + ViewBag.QuestionNum + "-answer";
                                         string propForRadio = "radio" + ViewBag.QuestionNum;
                                     }
                                     @if (question.IsMultipleAnswers)
                                     {
                                         @Html.CreateCheckboxesList(id, "answers", textValues)
                                     }
                                     else
                                     {
                                         @Html.CreateRadioList(id, propForRadio, textValues)
                                     }
                                 </div>
                                 ViewBag.QuestionNum++;
                             }
                            <div class="input-field centralized">
                                <input type="submit" value="Finish" class="btn btn-default main-color-background"/>
                            </div>
                        }
                    </div>
                </div>               
            </div>
        </div>
    </div>
</div>

