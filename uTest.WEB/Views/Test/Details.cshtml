@using Microsoft.AspNet.Identity
@model uTest.WEB.ViewModels.TestViewModel

@{
    ViewBag.Title = "Details";
}

<div class="row"></div>
<div class="row">
    <div class="col l3 hide-on-med-and-down pushpin">
        <div class="moving-block">
            <div class="row">
                <div id="right-sidebar" class="card centralized z-depth-0">
                    <p class="card-title flow-text white-text menu-par">Menu</p>
                    <div class="collection with-header no-margin-top">
                        @Html.RouteLink("Home", new { controller = "Home", action = "Index" }, new { @class = "collection-item main-color-text" })
                        @Html.RouteLink("My tasks", new { controller = "Task", action = "Index" }, new { @class = "collection-item main-color-text" })
                        @Html.RouteLink("Public tests", new { controller = "Test", action = "Public" }, new { @class = "collection-item main-color-text" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col l9 m12 s12 push-l3">
        <div class="row">
            <div class="col l11 m12 s12">
                <div class="row">
                    <p class="flow-text welcome-text centralized">@Model.Name</p>
                    <hr class="colored-hr-thin" />
                </div>
                <div class="row">
                    @if (Model.Description != null)
                    {
                        <p class="flow-text sub-welcome-text">Description: @Model.Description</p>
                    }
                    else
                    {
                        <p class="flow-text sub-welcome-text">There is no description for this test.</p>
                    }
                    <p class="flow-text sub-welcome-text">------------------</p>
                    @if (Model.Questions != null)
                    {
                        <p class="flow-text sub-welcome-text">Questions: @Model.Questions.Count</p>
                    }
                    else
                    {
                        <p class="flow-text sub-welcome-text">Questions: 0</p>
                    }
                    @if (Model.SolvedTests != null)
                    {
                        <p class="flow-text sub-welcome-text">Solved by @Model.SolvedTests.Count users</p>
                        if (Model.SolvedTests.Any(x => x.UserId.Equals(User.Identity.GetUserId())))
                        {
                            <p class="flow-text avarage-text centralized">Your result: @Model.SolvedTests.Find(x => x.UserId.Equals(User.Identity.GetUserId())).Result/100</p>
                        }
                    }
                    else
                    {
                        <p class="flow-text sub-welcome-text">Solved by 0 users</p>
                    }
                    @if (Model.SolvedTests != null && Model.SolvedTests.Any(x => x.UserId.Equals(User.Identity.GetUserId())))
                    {
                        <div class="centralized">
                            <a class="btn btn-default main-color-background" href="/Test/SolveTest/@Model.Id">Pass the test again</a>
                            <p class="flow-text sub-welcome-text centralized">(Your preveous result will be deleted)</p>
                        </div>
                    }
                    else
                    {
                        <div class="centralized">
                            <a class="btn btn-default main-color-background" href="/Test/SolveTest/@Model.Id">Pass the test</a>
                        </div>
                    }                   
                </div>
            </div>
        </div>
    </div>
</div>


